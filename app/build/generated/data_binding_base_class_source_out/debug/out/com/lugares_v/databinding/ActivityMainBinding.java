// Generated by view binder compiler. Do not edit!
package com.lugares_v.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lugares_v.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btLogin;

  @NonNull
  public final ImageButton btRegister;

  @NonNull
  public final EditText etClave;

  @NonNull
  public final EditText etCorreo;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btLogin,
      @NonNull ImageButton btRegister, @NonNull EditText etClave, @NonNull EditText etCorreo,
      @NonNull TextView textView, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.btLogin = btLogin;
    this.btRegister = btRegister;
    this.etClave = etClave;
    this.etCorreo = etCorreo;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_login;
      ImageButton btLogin = ViewBindings.findChildViewById(rootView, id);
      if (btLogin == null) {
        break missingId;
      }

      id = R.id.bt_register;
      ImageButton btRegister = ViewBindings.findChildViewById(rootView, id);
      if (btRegister == null) {
        break missingId;
      }

      id = R.id.et_clave;
      EditText etClave = ViewBindings.findChildViewById(rootView, id);
      if (etClave == null) {
        break missingId;
      }

      id = R.id.et_correo;
      EditText etCorreo = ViewBindings.findChildViewById(rootView, id);
      if (etCorreo == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btLogin, btRegister, etClave,
          etCorreo, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
